name: Publish

on:
  push:
    branches: [release/*]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  publish:
    name: Release on ${{ matrix.os }}, .Net ${{ matrix.dotnet_version }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet_version: [8.0.x]

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet_version }}

      - name: Read package.json
        id: package_json
        uses: zoexx/github-action-json-file-properties@1.0.6
        with:
          file_path: 'package.json'

      - name: Install Node and NPM
        uses: actions/setup-node@v4
        with:
          node-version: ${{ fromJson(steps.package_json.outputs.volta).node }}
          cache: npm

      - name: Install packages and build
        run: |
          npm ci
          npm run build

      - name: Publish releases - Linux
        # If the branch is labeled as a release version (e.g. "release/v1.2.3"),
        if: ${{ matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/heads/release/v') && contains(github.ref, '.') }}
        env:
          # no hardlinks so dependencies are copied
          USE_HARD_LINKS: false
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm exec electron-builder -- --publish always --linux

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
